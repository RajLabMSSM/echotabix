% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_and_query.R
\name{convert_and_query}
\alias{convert_and_query}
\title{Convert and query}
\usage{
convert_and_query(
  target_path,
  target_format = NULL,
  study_dir = NULL,
  target_chrom_col = "CHR",
  target_start_col = "POS",
  target_end_col = target_start_col,
  query_dat,
  query_granges = construct_query(query_dat = query_dat, query_chrom_col = "CHR",
    query_start_col = "POS", query_snp_col = "SNP"),
  samples = character(),
  query_save = TRUE,
  locus_dir = tempdir(),
  query_save_path = tempfile(fileext = ".gz"),
  target_genome = "GRCh37",
  query_genome = "GRCh37",
  convert_method = list(sort_coordinates = "bash", run_bgzip = "Rsamtools", index =
    "Rsamtools"),
  query_method = c("rsamtools", "seqminer", "conda"),
  conda_env = "echoR",
  convert_force_new = FALSE,
  query_force_new = FALSE,
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{target_path}{Path to local VCF file or remote URL.}

\item{study_dir}{Path to study folder.}

\item{query_dat}{Variant-level summary statistics.}

\item{samples}{[Optional] Sample names to subset the VCF by. 
If this option is used, the \link[GenomicRanges]{GRanges} object will be
converted to a \link[VariantAnnotation]{ScanVcfParam} for usage by 
\link[VariantAnnotation]{readVcf}.}

\item{query_save}{Whether to save the queried data subset.}

\item{locus_dir}{Locus-specific folder.}

\item{target_genome}{Genome build of the VCF file.}

\item{nThread}{Number of threads to use.}

\item{verbose}{Print messages.}
}
\value{
\link[data.table]{data.table} or \link[VariantAnnotation]{VCF}
of requested subset of \code{fullSS_path}.
}
\description{
If it is not tabix format already
(determined by checking for a \code{.tbi}
file of the same name in the same directory),
the full summary statistics file is converted into tabix format
for super fast querying.
A query is then made using the min/max genomic positions to extract a
 locus-specific summary stats file.
}
\examples{
query_dat <- echodata::BST1
target_path <- echodata::example_fullSS() 

query_res <- echotabix::convert_and_query( 
    target_path = target_path,
    target_start_col = "BP", 
    query_dat = query_dat,
    query_force_new = TRUE) 
}
\concept{tabix}
