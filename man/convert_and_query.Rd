% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_and_query.R
\name{convert_and_query}
\alias{convert_and_query}
\title{Convert and query}
\usage{
convert_and_query(
  target_path,
  target_index = paste0(target_path, ".tbi"),
  target_format = NULL,
  study_dir = NULL,
  target_chrom_col = "CHR",
  target_start_col = "POS",
  target_end_col = target_start_col,
  query_granges,
  samples = character(),
  query_save = TRUE,
  query_save_path = tempfile(fileext = ".gz"),
  target_genome = "GRCh37",
  query_genome = "GRCh37",
  convert_methods = list(sort_coordinates = "bash", run_bgzip = "Rsamtools", index =
    "Rsamtools"),
  query_method = c("rsamtools", "seqminer", "conda"),
  conda_env = "echoR_mini",
  convert_force_new = FALSE,
  query_force_new = FALSE,
  nThread = 1,
  verbose = TRUE
)
}
\arguments{
\item{target_path}{Path to full GWAS/QTL summary statistics file.}

\item{target_index}{Tabix index file for \code{target_path}.}

\item{target_format}{Format of the \code{target_path} file: "vcf" or "table".}

\item{study_dir}{Path to study folder.}

\item{target_chrom_col}{Name of the chromosome column 
in the \code{target_path} file.}

\item{target_start_col}{Name of the genomic start position column 
in the \code{target_path} file.}

\item{target_end_col}{Name of the genomic end position column 
in the \code{target_path} file.}

\item{query_granges}{\link[GenomicRanges]{GRanges} object 
to be used for querying the \code{target_path} file. 
Alternatively, can be variant-level summary statistics to be converted into a
\link[GenomicRanges]{GRanges} object by \link[echotabix]{construct_query}.}

\item{samples}{[Optional] Sample names to subset the VCF by. 
If this option is used, the \link[GenomicRanges]{GRanges} object will be
converted to a \link[VariantAnnotation]{ScanVcfParam} for usage by 
\link[VariantAnnotation]{readVcf}.}

\item{query_save}{Whether to save the queried data subset.}

\item{query_save_path}{Path to save retrieved query subset to.}

\item{target_genome}{Genome build of the VCF file.}

\item{query_genome}{Genome build that the \code{query_granges} is aligned to.}

\item{convert_methods}{A named list containing methods to run each step with.}

\item{query_method}{Method used for querying. 
See \link[echotabix]{query} for available options.}

\item{conda_env}{Conda environments to search in. 
If \code{NULL} (default), will search all conda environments.}

\item{convert_force_new}{If the \code{target_path} is already in 
sorted/indexed tabix format, set \code{convert_force_new=TRUE} to re-convert 
it into tabix format.}

\item{query_force_new}{If the query subset (\code{query_save_path})
already exists, set \code{query_force_new=TRUE}
 to retrieve a new query subset.}

\item{nThread}{Number of threads to use.}

\item{verbose}{Print messages.}
}
\value{
\link[data.table]{data.table} or \link[VariantAnnotation]{VCF}
of requested subset of \code{target_path}.
}
\description{
If it is not tabix format already
(determined by checking for a \code{.tbi}
file of the same name in the same directory),
the full summary statistics file is converted into tabix format
for super fast querying.
A query is then made using the min/max genomic positions to extract a
 locus-specific summary stats file.
}
\examples{
query_dat <- echodata::BST1
target_path <- echodata::example_fullSS() 

query_res <- echotabix::convert_and_query( 
    target_path = target_path,
    target_start_col = "BP", 
    query_granges = query_dat,
    query_force_new = TRUE) 
}
\seealso{
Other tabix: 
\code{\link{index_variantannotation}()}
}
\concept{tabix}
