% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_tabular.R
\name{query_tabular}
\alias{query_tabular}
\title{Query a tabix file}
\usage{
query_tabular(
  fullSS_tabix,
  chrom,
  start_pos,
  end_pos,
  local = "infer",
  verbose = TRUE
)
}
\arguments{
\item{fullSS_tabix}{Path to tabix file.}

\item{chrom}{Chromosome to query.}

\item{start_pos}{Minimum genomic position to query.}

\item{end_pos}{Maximum genomic position to query.}

\item{local}{Whether \code{fullSS_tabix} is stored locally or 
on a remote server/website.
By default (\code{"infer"}) will infer local status and 
use the appropriate method.}

\item{verbose}{Print messages.}
}
\value{
\code{data.table} with the queried subset of genomic data.
}
\description{
Query by genomic coordinates.
}
\examples{
\dontrun{
BST1 <- echodata::BST1

#### local ####
fullSS_path <- echodata::example_fullSS()
fullSS_tabix <- convert(fullSS_path = fullSS_path, start_col = "BP")
tab <- query_tabular(
    fullSS_tabix = fullSS_tabix,
    chrom = BST1$CHR[1],
    start_pos = min(BST1$POS),
    end_pos = max(BST1$POS)
)

#### remote ####
fullSS_tabix <- file.path(
    "https://egg2.wustl.edu/roadmap/data/byFileType",
    "chromhmmSegmentations/ChmmModels/coreMarks/jointModel/final",
    "E099_15_coreMarks_dense.bed.bgz"
)
tab <- query_tabular(
    fullSS_tabix = fullSS_tabix,
    chrom = BST1$CHR[1],
    start_pos = min(BST1$POS),
    end_pos = max(BST1$POS)
)
}
}
\concept{query functions}
